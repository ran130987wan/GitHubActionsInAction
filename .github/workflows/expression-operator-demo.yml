name: Expression Operators Demo

on:
  workflow_dispatch:
    inputs:
      env_name:
        description: 'Environment name'
        required: true
        default: 'staging'
      version:
        description: 'Version number'
        required: true
        default: '1.0.0'

env:
  RELEASE_STAGE: "beta"
  VERSION_MAJOR: "1"

jobs:
  operator-demo:
    runs-on: ubuntu-latest
    steps:
      # ( ) Logical grouping
      - name: Logical grouping example
        if: ${{ (github.ref == 'refs/heads/main') && (inputs.env_name == 'production') }}
        run: echo "üöÄ Deploying production from main branch"

      # [ ] Index access
      - name: Index access example
        run: |
          echo "First character of ref: ${{ github.ref[0] }}"

      # . Property dereference
      - name: Property access example
        run: echo "Commit SHA: ${{ github.sha }}"

      # ! Not operator
      - name: Not operator example
        if: ${{ ! (inputs.env_name == 'production') }}
        run: echo "üîí Not deploying to production"

      # <, <= Less than / Less than or equal
      - name: Less than example
        if: ${{ env.VERSION_MAJOR < 2 }}
        run: echo "üì¶ Version is less than 2"

      # >, >= Greater than / Greater than or equal
      - name: Greater than example
        if: ${{ env.VERSION_MAJOR >= 1 }}
        run: echo "‚úÖ Version is 1 or higher"

      # == Equal
      - name: Equal operator example
        if: ${{ inputs.env_name == 'staging' }}
        run: echo "üß™ Running in staging environment"

      # != Not equal
      - name: Not equal operator example
        if: ${{ env.RELEASE_STAGE != 'stable' }}
        run: echo "‚ö†Ô∏è Release is not stable"

      # && And operator
      - name: And operator example
        if: ${{ github.actor == 'octocat' && inputs.env_name == 'dev' }}
        run: echo "üë§ Octocat is deploying to dev"

      # || Or operator
      - name: Or operator example
        if: ${{ inputs.env_name == 'staging' || inputs.env_name == 'qa' }}
        run: echo "üîÑ Running in staging or QA"
