name: Chained Jobs Workflow

on:
  workflow_dispatch:

jobs:
  job_1:
    runs-on: ubuntu-latest
    steps:
      - name: Step in Job 1
        run: echo "âœ… Running Job: ${{ github.job }}"

  job_2:
    runs-on: ubuntu-latest
    needs: job_1
    steps:
      - name: Step in Job 2
        run: echo "âœ… Running Job: ${{ github.job }} after Job 1"

  job_3:
    runs-on: ubuntu-latest
    needs: job_1
    steps:
      - name: Step in Job 3
        run: echo "âœ… Running Job: ${{ github.job }} after Job 1"

  job_4:
    runs-on: ubuntu-latest
    needs:
      - job_2
      - job_3
    steps:
      - name: Final Step in Job 4
        run: echo "âœ… Running Job: ${{ github.job }} after Job 2 and Job 3"
# ðŸ”„ Execution Flow

# job_1 runs first.
# job_2 and job_3 run in parallel after job_1 completes.
# job_4 runs after both job_2 and job_3 have finished.

# This structure is useful for workflows that require sequential and parallel execution, such as:

# Building â†’ Testing â†’ Deploying
# Linting â†’ Unit Tests â†’ Integration Tests â†’ Packaging
